# -*- coding: utf-8 -*-
# Generated by Django 1.11.25 on 2019-10-18 20:20
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('admin', 'Admin'), ('Betatester', 'Betatester'), ('profesor', 'Profesor'), ('alumno', 'Alumno')], max_length=40)),
                ('observations', models.TextField(blank=True, max_length=500)),
                ('jupyter_port', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_id', models.CharField(max_length=40, unique=True)),
                ('name', models.CharField(max_length=40, unique=True)),
                ('state', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('testing', 'Testing')], max_length=40)),
                ('platform', models.CharField(blank=True, choices=[('gazebo', 'Gazebo'), ('real', 'Real'), ('theory', 'Theory'), ('vision', 'Vision'), ('tutorials', 'Tutoriales')], max_length=40)),
                ('language', models.CharField(choices=[('python', 'Python'), ('javascript', 'JavaScript'), ('scratch', 'Scratch')], max_length=40)),
                ('description', models.CharField(max_length=400)),
                ('video', models.CharField(blank=True, max_length=100)),
                ('topic', models.CharField(blank=True, max_length=100)),
                ('thumbnail', models.CharField(blank=True, max_length=100)),
                ('assets', models.CharField(default=b'{"notebook": ""}', max_length=2000)),
                ('gui', models.CharField(blank=True, max_length=2000)),
                ('referee', models.CharField(blank=True, max_length=2000)),
                ('real', models.CharField(blank=True, max_length=50)),
                ('local', models.CharField(blank=True, max_length=2000)),
                ('compute_load', models.IntegerField(default=100)),
                ('observations', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='exercises',
            field=models.ManyToManyField(blank=True, to='local_execution_app.Exercise'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
